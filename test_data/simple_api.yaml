openapi: 3.0.0
info:
  title: Simple Payment API
  version: 1.0.0
  description: A simple payment processing API for testing
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.example.com/v1
    description: Production server

paths:
  /payments:
    post:
      summary: Process a payment
      description: Process a new payment transaction
      operationId: processPayment
      tags:
        - payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
      responses:
        '200':
          description: Payment processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - apiKey: []

    get:
      summary: List payments
      description: Retrieve a list of payments
      operationId: listPayments
      tags:
        - payments
      parameters:
        - name: limit
          in: query
          description: Maximum number of results
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
      responses:
        '200':
          description: List of payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentResponse'
      security:
        - apiKey: []

  /customers:
    post:
      summary: Create customer
      description: Create a new customer
      operationId: createCustomer
      tags:
        - customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequest'
      responses:
        '201':
          description: Customer created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Bad request
      security:
        - apiKey: []

components:
  schemas:
    PaymentRequest:
      type: object
      description: Payment request data
      properties:
        amount:
          type: integer
          minimum: 1
          description: Amount in cents
        currency:
          type: string
          minLength: 3
          maxLength: 3
          description: Currency code
        customerId:
          type: string
          description: Customer identifier
        description:
          type: string
          description: Payment description
      required:
        - amount
        - currency
        - customerId

    PaymentResponse:
      type: object
      description: Payment response data
      properties:
        id:
          type: string
          description: Payment ID
        status:
          type: string
          enum:
            - pending
            - completed
            - failed
          description: Payment status
        amount:
          type: integer
          description: Payment amount
        currency:
          type: string
          description: Currency code
        customerId:
          type: string
          description: Customer ID
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
      required:
        - id
        - status
        - amount
        - currency
        - customerId
        - createdAt

    CustomerRequest:
      type: object
      description: Customer creation request
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          description: Customer name
        email:
          type: string
          format: email
          description: Customer email
        phone:
          type: string
          description: Customer phone number
      required:
        - name
        - email

    Customer:
      type: object
      description: Customer data
      properties:
        id:
          type: string
          description: Customer ID
        name:
          type: string
          description: Customer name
        email:
          type: string
          format: email
          description: Customer email
        phone:
          type: string
          description: Customer phone number
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        status:
          type: string
          enum:
            - active
            - inactive
          description: Customer status
      required:
        - id
        - name
        - email
        - createdAt
        - status

    Error:
      type: object
      description: Error response
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: Error code
            message:
              type: string
              description: Error message
          required:
            - code
            - message
      required:
        - error

  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

security:
  - apiKey: []

tags:
  - name: payments
    description: Payment operations
  - name: customers
    description: Customer management